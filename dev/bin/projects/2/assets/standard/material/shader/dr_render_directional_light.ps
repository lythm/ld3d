#version 330

#pragma include "dr_gbuffer.glsl"
#pragma include "dr_light.glsl"
#pragma include "matrix_block.glsl"

uniform sampler2D _DR_G_BUFFER_1;

layout(row_major) uniform;

layout(std140) uniform light
{
	vec3	dir;
	float	intensity;
	vec3	clr;
};

out vec4 f_color;


void main()
{
	vec2 dim = textureSize(_DR_G_BUFFER_1, 0);

	vec2 uv = gl_FragCoord.xy / dim;

	vec3 n = dr_gbuffer_get_normal(_DR_G_BUFFER_1, uv);

	DirectionalLight l;
	
	l.dir = dir;
	
	l.intensity = intensity;
	l.clr = clr;

	LightResult ret = dr_light_dir(n, l, MATRIX_WV);
	
	f_color.xyz = ret.diffuse;
	f_color.w = rgb_2_il(ret.specular);

}
