#version 330

#pragma include "dr_gbuffer.glsl"
#pragma include "fog_formular.glsl"

uniform sampler2D _DR_A_BUFFER;
uniform sampler2D _DR_G_BUFFER_2;
uniform sampler2D _DR_G_BUFFER_0;

out vec4 f_color;

vec3 fog(vec3 clr, float d, vec3 fog_clr)
{
	
	return clr;


	/*float start = 20;
	float end = 100;

	//float f = fog_factor_linear(start, end, d);
	//float f = fog_factor_exp(0.03, d);
	float f = fog_factor_exp2(0.03, d);
	
	return (1 - f) * clr + (fog_clr * f);
	*/
}
void main()
{
	vec2 dim = textureSize(_DR_A_BUFFER, 0);
	vec2 uv = gl_FragCoord.xy / dim;

	vec4 l = texture(_DR_A_BUFFER, uv);

	vec4 d = texture(_DR_G_BUFFER_2, uv);
		
	//f_color.xyz = l.xyz * d.xyz + (l.w * d.xyz) * d.w;

	f_color.xyz = (l.xyz * d.xyz + (l.w * d.xyz))* d.w;

	float depth = dr_gbuffer_get_depth(_DR_G_BUFFER_0, uv);
	
	vec3 fog_color = vec3(1, 1, 1);

	f_color.xyz = fog(f_color.xyz, depth, fog_color);

	f_color.w = 1;
}
