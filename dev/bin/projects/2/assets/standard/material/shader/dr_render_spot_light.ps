#version 330

#pragma include "matrix_block.glsl"
#pragma include "dr_gbuffer.glsl"
#pragma include "dr_light.glsl"

uniform sampler2D _DR_G_BUFFER_0;
uniform sampler2D _DR_G_BUFFER_1;
uniform sampler2D _DR_G_BUFFER_2;

out vec4 color;
void main()
{
	vec2 dim = textureSize(_DR_G_BUFFER_0, 0);
	vec2 uv = gl_FragCoord.xy / dim;
	vec3 n = dr_gbuffer_get_normal(_DR_G_BUFFER_1, uv);
	float depth = dr_gbuffer_get_depth(_DR_G_BUFFER_0, uv);
	vec3 vpos = view_port_2_view_space(gl_FragCoord.xy, depth, MATRIX_PROJ, dim);

	SpotLight light;

	LightResult ret = dr_light_spot(vpos, n, light, MATRIX_WV);

	color.xyz = ret.diffuse;
	color.w = rgb_2_il(ret.specular);
}
